<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Auth_AcceptToS" xml:space="preserve">
    <value>Ich stimme dem zu</value>
  </data>
  <data name="Auth_Age" xml:space="preserve">
    <value>Alter</value>
  </data>
  <data name="Auth_AlternativeLogin" xml:space="preserve">
    <value>oder</value>
  </data>
  <data name="Auth_CompleteData" xml:space="preserve">
    <value>Vervollständigen Sie die Daten</value>
  </data>
  <data name="Auth_Confirm" xml:space="preserve">
    <value>Bestätigen</value>
  </data>
  <data name="Auth_Email" xml:space="preserve">
    <value>E-mail adresse</value>
  </data>
  <data name="Auth_ForgotPassword" xml:space="preserve">
    <value>Passwort vergessen?</value>
  </data>
  <data name="Auth_Gender" xml:space="preserve">
    <value>Geschlecht</value>
  </data>
  <data name="Auth_Lang" xml:space="preserve">
    <value>Sprache</value>
  </data>
  <data name="Auth_Login" xml:space="preserve">
    <value>Anmeldung</value>
  </data>
  <data name="Auth_Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Auth_Nationality" xml:space="preserve">
    <value>Wählen Sie Ihre Nationalität aus</value>
  </data>
  <data name="Auth_Password" xml:space="preserve">
    <value>Passwort</value>
  </data>
  <data name="Auth_Photo" xml:space="preserve">
    <value>Foto</value>
  </data>
  <data name="Auth_Register" xml:space="preserve">
    <value>Registrieren</value>
  </data>
  <data name="Auth_Registration" xml:space="preserve">
    <value>Registrierung</value>
  </data>
  <data name="Auth_RepeatPassword" xml:space="preserve">
    <value>Passwort wiederholen</value>
  </data>
  <data name="Auth_SignIn" xml:space="preserve">
    <value>Anmelden</value>
  </data>
  <data name="Auth_ToS" xml:space="preserve">
    <value>Geschäftsbedingungen</value>
  </data>
  <data name="Auth_Username" xml:space="preserve">
    <value>Nutzername</value>
  </data>
  <data name="HowToPlay_Button" xml:space="preserve">
    <value>Spielanleitung ?</value>
  </data>
  <data name="HowToPlay_HaveFun" xml:space="preserve">
    <value>Viel Spaß!</value>
  </data>
  <data name="HowToPlay_LetsStart" xml:space="preserve">
    <value>Lass uns anfangen</value>
  </data>
  <data name="HowToPlay_PreliminaryInformation" xml:space="preserve">
    <value>Vorabinformationen</value>
  </data>
  <data name="HowToPlay_Step1" xml:space="preserve">
    <value>Schritt I</value>
  </data>
  <data name="HowToPlay_Step1description" xml:space="preserve">
    <value>Um das Spiel in Versus zu starten, suchen Sie zunächst im Matchmaking-Tab einen Gegner. Sie können sich der Warteschlange anschließen, Filter festlegen und darauf warten, dass Ihr Gegner ausgewählt wird. Eine andere Möglichkeit besteht darin, ein Spiel mit Ort, Beschreibung und Datum anzukündigen und auf die Zustimmung Ihres Gegners zu warten oder eine bestehende Ankündigung zu ergänzen. Ankündigungen ermöglichen Multiplayer-Gameplay.</value>
  </data>
  <data name="HowToPlay_Step2" xml:space="preserve">
    <value>Schritt II</value>
  </data>
  <data name="HowToPlay_Step2description" xml:space="preserve">
    <value>Im nächsten Schritt gehen Sie zum Reiter „Spiele“, wo Sie alle verfügbaren Spiele finden, die von uns oder Ihrem Gegner genehmigt wurden. &lt;br&gt;In diesem Abschnitt können Sie mit Ihrem Gegner per Chat kommunizieren, wodurch Sie das Datum und den Ort des Spiels festlegen und das Spiel akzeptieren können, wenn Sie den Warteschlangenfilter verwenden. &lt;br&gt;&lt;br&gt;Im Falle von Übereinstimmungen, die über eine Anzeige gefunden werden, können wir den Spielstatus sehen und Informationen zu einem bestimmten Ereignis verfolgen.</value>
  </data>
  <data name="HowToPlay_Step3" xml:space="preserve">
    <value>Schritt III</value>
  </data>
  <data name="HowToPlay_Step3description" xml:space="preserve">
    <value>Der letzte Schritt besteht darin, das Spiel mithilfe einer mobilen Anwendung am Spielort zu überprüfen.&lt;br&gt;Wählen Sie dazu das aktuelle Spiel im Reiter „Spiele“ aus und scannen Sie den QR-Code mit dem Gerät des Gegners. Dadurch ist es möglich, das Spiel zu starten.&lt;br&gt;&lt;br&gt;Geben Sie nach Ende des Spiels das Ergebnis ein und scannen Sie den QR-Code erneut, um das offizielle Ergebnis des Spiels zu bestätigen. Bei Ankündigungen tragen die Teamleiter die Ergebnisse ein.</value>
  </data>
  <data name="HowToPlay_VersusDescription" xml:space="preserve">
    <value>Versus ist eine Anwendung, die auf gemeinsame Sportspiele zwischen Spielern abzielt. Dadurch können wir neue Leute kennenlernen und viele interessante Sportwettkämpfe erleben. Messen Sie sich mit Freunden, verbessern Sie Ihre Fähigkeiten und erklimmen Sie den Versus-Rang.</value>
  </data>
  <data name="Matchmaking_Advertisements" xml:space="preserve">
    <value>Anzeige</value>
  </data>
  <data name="Matchmaking_Queue" xml:space="preserve">
    <value>Warteschlange</value>
  </data>
  <data name="Matchmaking_SelectMode" xml:space="preserve">
    <value>Wählen Sie einen Modus aus</value>
  </data>
  <data name="Sidebar_Friends" xml:space="preserve">
    <value>Freunde</value>
  </data>
  <data name="Sidebar_Home" xml:space="preserve">
    <value>Heim</value>
  </data>
  <data name="Sidebar_HowToPlay" xml:space="preserve">
    <value>Spielanleitung?</value>
  </data>
  <data name="Sidebar_LogOut" xml:space="preserve">
    <value>Ausloggen</value>
  </data>
  <data name="Sidebar_Matches" xml:space="preserve">
    <value>Streichhölzer</value>
  </data>
  <data name="Sidebar_Matchmaking" xml:space="preserve">
    <value>Wettbewerbe</value>
  </data>
  <data name="Sidebar_Settings" xml:space="preserve">
    <value>Einstellungen</value>
  </data>
  <data name="Sidebar_Stats" xml:space="preserve">
    <value>Statistiken</value>
  </data>
</root>