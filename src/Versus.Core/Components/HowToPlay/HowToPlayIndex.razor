@page "/HowToPlayIndex"
@using MudBlazor
@using Versus.Core.Components.HowToPlay.Components


<div style="height: 90vh;" class="card vs-bg-primary">
    <div class="card-body">
        <MudCarousel @bind-SelectedIndex="selectedIndex" Class="mud-width-full mud-height-full" Style=" position: relative;" AutoCycle="false" ShowArrows="false" TData="object">
            <BulletTemplate Context="selected">
                <div Class="mud-button-root mud-icon-button mud-icon-button-color-inherit mud-ripple mud-ripple-icon">
                    <MudIcon Icon="@(selected ? Icons.Material.Filled.CheckCircle : Icons.Material.Filled.Circle)" Color="@Color.Inherit" />
                </div>
            </BulletTemplate>

            <ChildContent>
                <MudCarouselItem Style="background: linear-gradient(1deg, #e37676, transparent)">
                    <div class="d-flex justify-content-center align-items-center" style="height:90%">
                        <div class="justify-content-center text-center mt-5">
                            <img style="max-height:125px" src="_content/Versus.Core/images/VersusLogo.png" class="img-fluid" alt="app_logo" />
                            <h3 class="vs-text-shadow mb-5">@Localizer["HowToPlay_PreliminaryInformation"]</h3>
                            <p class="vs-white">
                                @Localizer["HowToPlay_VersusDescription"]
                            </p>
                            <RadzenButton Text="@Localizer["HowToPlay_Button"]" Style="max-width:150px" Click="MoveCarousel" ButtonStyle="ButtonStyle.Secondary" />
                        </div>
                    </div>
                </MudCarouselItem>
                <MudCarouselItem Style="background: linear-gradient(1deg, #e37676, transparent)">
                    <div class="d-block justify-content-center align-items-center" style="height:100%">
                        <Details></Details>
                    </div>
                </MudCarouselItem>
            </ChildContent>
        </MudCarousel>
    </div>
</div>
@code {
    private int selectedIndex = 0;

    private async Task MoveCarousel()
    {

        selectedIndex = 1;
  
    }

}